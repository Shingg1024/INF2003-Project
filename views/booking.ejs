<%- include('include/_header') %>

  <%- include('include/_nav') %>
    <div class="text-center mb-3">
      <input type="radio" name="sortByType" id="all" value="all" checked> All
      <input type="radio" name="sortByType" id="hostel" value="hostel"> Hostel
      <input type="radio" name="sortByType" id="restaurant" value="restaurant"> Restaurant
    </div>

    <div class="text-center mb-3">
      <input type="checkbox" name="sortUpcoming" id="upcoming" value="upcoming"> Upcoming
      <input type="checkbox" name="sortCompleted" id="completed" value="completed"> Completed
    </div>

    <div class="text-center mb-3">
      <button id="sort-button" class="btn btn-primary">Sort Data</button>
      <h1 id="display"></h1>
    </div>
    <input hidden id="hiddenUserId" value="<%= (session.user.user_id) %>" />
    <table class="table table-bordered">
      <thead>
        <tr>
          <th>id</th>
          <th>start </th>
          <th>end</th>
          <th>booking type</th>
        </tr>
      </thead>
      <tbody>
        <% data.forEach(item=> { %>
          <tr>
            <td>
              <%= item.hostel_id %>
            </td>
            <td>
              <%= item.date_start %>
            </td>
            <td>
              <%= item.date_end %>
            </td>
            <td>
              <%= item.booking_type %>
            </td>
          </tr>
          <% }); %>
      </tbody>
    </table>

    <script>
      document.getElementById('sort-button').addEventListener('click', () => {

        var completed = document.getElementById('completed');
        var upcoming = document.getElementById('upcoming');
        var id = document.querySelector('#hiddenUserId').value;

        const sortingParameter = document.querySelector('input[name="sortByType"]:checked').value;
        if (sortingParameter == 'hostel') {
          if ((completed.checked && upcoming.checked)) {
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';

            fetch(`/booking/getAllHostelByUserId/${id}`)
              .then(response => response.json())
              .then(data => {
                const tbody = document.querySelector('tbody');
                data.forEach(item => {
                  const row = document.createElement('tr');
                  row.innerHTML = `
            <td>${item.hostel_id}</td>
            <td>${item.date_start}</td>
            <td>${item.date_end}</td>
          `;
                  tbody.appendChild(row);
                })
              })
              .catch(error => {
                console.error("An error occurred:", error);
              });
          } else if((!completed.checked && !upcoming.checked)){
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';
          } else if (upcoming.checked) {
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';

            fetch(`/booking/getHostelUpcoming/${id}`)
              .then(response => response.json())
              .then(data => {
                const tbody = document.querySelector('tbody');
                data.forEach(item => {
                  const row = document.createElement('tr');
                  row.innerHTML = `
            <td>${item.hostel_id}</td>
            <td>${item.formatted_date_start}</td>
            <td>${item.formatted_date_end}</td>
          `;
                  tbody.appendChild(row);
                })
              })
              .catch(error => {
                console.error("An error occurred:", error);
              });
          } else if (completed.checked) {
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';

            fetch(`/booking/getHostelCompleted/${id}`)
              .then(response => response.json())
              .then(data => {
                const tbody = document.querySelector('tbody');
                data.forEach(item => {
                  const row = document.createElement('tr');
                  row.innerHTML = `
            <td>${item.hostel_id}</td>
            <td>${item.formatted_date_start}</td>
            <td>${item.formatted_date_end}</td>
          `;
                  tbody.appendChild(row);
                })
              })
              .catch(error => {
                console.error("An error occurred:", error);
              });
          }
          updateTableHeaders(['Hostal ID', 'Date Start', 'Date End']);
        } else if (sortingParameter == 'restaurant') {
          if ((completed.checked && upcoming.checked)) {
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';

            fetch(`/booking/getRestaurantByUserId/${id}`)
              .then(response => response.json())
              .then(data => {
                const tbody = document.querySelector('tbody');
                data.forEach(item => {
                  const row = document.createElement('tr');
                  row.innerHTML = `
            <td>${item.restaurant_id}</td>
            <td>${item.date}</td>
            <td>${item.time}</td>
          `;
                  tbody.appendChild(row);
                })
              })
              .catch(error => {
                console.error("An error occurred:", error);
              });
          } else if((!completed.checked && !upcoming.checked)){
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';
          } else if (completed.checked) {
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';

            fetch(`/booking/getRestaurantCompleted/${id}`)
              .then(response => response.json())
              .then(data => {
                const tbody = document.querySelector('tbody');
                data.forEach(item => {
                  const row = document.createElement('tr');
                  row.innerHTML = `
            <td>${item.restaurant_id}</td>
            <td>${item.formatted_date}</td>
            <td>${item.time}</td>
          `;
                  tbody.appendChild(row);
                })
              })
              .catch(error => {
                console.error("An error occurred:", error);
              });
          } else if (upcoming.checked) {
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';

            fetch(`/booking/getRestaurantUpcoming/${id}`)
              .then(response => response.json())
              .then(data => {
                const tbody = document.querySelector('tbody');
                data.forEach(item => {
                  const row = document.createElement('tr');
                  row.innerHTML = `
            <td>${item.restaurant_id}</td>
            <td>${item.formatted_date}</td>
            <td>${item.time}</td>
          `;
                  tbody.appendChild(row);
                })
              })
              .catch(error => {
                console.error("An error occurred:", error);
              });
          }

          updateTableHeaders(['Restaurant ID', 'Date', 'Time']);
        } else if (sortingParameter == 'all') {
          if ((completed.checked && upcoming.checked)) {
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';

            fetch(`/booking/getBooking/${id}`)
              .then(response => response.json())
              .then(data => {
                const tbody = document.querySelector('tbody');
                data.forEach(item => {
                  const row = document.createElement('tr');
                  row.innerHTML = `
            <td>${item.booking_hostel_id}</td>
            <td>${item.date_start}</td>
            <td>${item.date_end}</td>
            <td>${item.booking_type}</td>
          `;
                  tbody.appendChild(row);
                })
              })
              .catch(error => {
                console.error("An error occurred:", error);
              });
          } else if((!completed.checked && !upcoming.checked)){
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';
          }else if (completed.checked) {
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';

            fetch(`/booking/getHostelAndRestaurantCompleted/${id}`)
              .then(response => response.json())
              .then(data => {
                const tbody = document.querySelector('tbody');
                data.forEach(item => {
                  const row = document.createElement('tr');
                  row.innerHTML = `
                  <td>${item.booking_hostel_id}</td>
            <td>${item.date_start}</td>
            <td>${item.date_end}</td>
            <td>${item.booking_type}</td>
          `;
                  tbody.appendChild(row);
                })
              })
              .catch(error => {
                console.error("An error occurred:", error);
              });
          } else if (upcoming.checked) {
            const tableBody = document.querySelector('tbody');
            tableBody.innerHTML = '';

            fetch(`/booking/getHostelAndRestaurantUpcoming/${id}`)
              .then(response => response.json())
              .then(data => {
                const tbody = document.querySelector('tbody');
                data.forEach(item => {
                  const row = document.createElement('tr');
                  row.innerHTML = `
                  <td>${item.booking_hostel_id}</td>
            <td>${item.date_start}</td>
            <td>${item.date_end}</td>
            <td>${item.booking_type}</td>
          `;
                  tbody.appendChild(row);
                })
              })
              .catch(error => {
                console.error("An error occurred:", error);
              });
          }

          updateTableHeaders(['ID', 'start', 'end', 'booking type']);
        }
      });


      function updateTableHeaders(columnNames) {
        const thead = document.querySelector('thead tr');
        thead.innerHTML = ''; // Clear existing headers

        columnNames.forEach(columnName => {
          const th = document.createElement('th');
          th.textContent = columnName;
          thead.appendChild(th);
        });
      };
    </script>

    <!-- include footer -->
    <%- include('include/_footer')%>
      <!-- include footer -->